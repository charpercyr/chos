
1- Go to x64 (done)
    - First 4GB identity mapped with 1GB pages

2- Initialize simple serial and interrupts (done)

3- Load and map kernel from multiboot2
    - PIC x64 kernel
    - Map to higher half

4- Enable timer (done)
    - Calculate timer frequency
    - Used for delays

5- Start other processors (done)
    - All x64 with the same page table

6- Disable timer and interrupts

7- Jump to kernel, from all processors
    - rdi = kernel boot info structure (See below)
    - rsi = APIC ID
    - Page table
        - First 0-4GB mapped
        - Kernel mapped
        - Page table mapped

Kernel boot structure
    - Kernel entry address
    - Multiboot2 info
    - Kernel ELF content
    - Boot memory map / allocation

Physical Memory Map
    0x00008000 - 0x00010000: MP initialization code
    0x00010000 - 0x00080000: MP initialization data
    0x00100000 - 0x01000000: Boot code
    0x01000000 - 0x40000000: Kernel code (mapped to higher half, see docs/memory_map.txt)
